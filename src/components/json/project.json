{
  "projet": [
    {
      "name": "Projet de DUT Fin d'Étude-Transition JS",
      "desc": "L'objectif de ce projet était d'apporter une amélioration au programme de mon  professeur tuteur, qui permettait de réaliser des diaporamas, mais en utilisant les langages web (HTML, CSS, JS) et donc réaliser des diaporamas sur une page web.\nLes améliorations que j'ai apportés sont :\n\nLa possibilité de pouvoir enregistrer les actions effectuées sur la page, étant donné que les actions utilisables pour pouvoir par exemple, afficher l'élément suivant sont déjà définis par le code mon professeur. Les actions effectuées sur la page sont enregistrées dans un fichier JSON qui contient la touche appuyée ainsi que la seconde ou l'action a été effectuée.\nLa possibilité de pouvoir enregistrer sa voix (à l'aide d'un micro). Le fichier audio est enregistré au format webm.\nLa possibilité de pouvoir jouer ce qui a été enregistré sur la page, pour voir le diaporama complet.\n",
      "link": "https://hanasagi.github.io/",
      "langage":"Javascript"
    },
    {
      "name": "Site Blindtest-Mekura",
      "desc": "L'objectif de ce projet est d'avoir deux choses :\n\nUn site web, comprenant des \"rooms\" pour pouvoir jouer à plusieurs. J'ai utilisé l'Oauth2 de Discord pour pouvoir se connecter au site. Les rooms sont créés et gérés par SocketIO, les musiques sont stockées sur une base de données MySQL. L'idée du jeu sur le site est simple, une musique est choisie, la vidéo se joue se joue et on peut répondre dans une text box. À la fin de la musique, les réponses de tout le monde sont révélées et on voit qui a faux ou juste.\nUn bot discord, qui joue l'audio de la musique dans les canaux vocaux. (Pas encore réalisé)\n\nJ'ai choisi d'utiliser React et Spring Boot, car je voulais voir comment fonctionnais ces deux frameworks.\n\nJ'ai aussi appris à utiliser Docker et ai rajouté un docker compose pour rajouter le backend et le frontend, ainsi que MySQL et PhpMyAdmin dans une seule image.",
      "link": "https://github.com/Hanasagi/Mekura-Website",
      "langage":"React, Sprint Boot"
    },
    {
      "name": "Extension Chrome-Pixiv Overlay",
      "desc": "L'objectif principal était de pouvoir récupérer à l'aide de web scraping les informations du wiki pour les stocker de mon côté et ainsi pour les afficher sur demande à l'aide d'une commande comprenant l'information demandée (le nom d'un personnage, d'un équipement, etc). Puis j'ai rajouté une fonction permettant d'afficher des dessins (principalement fanart) sur Discord en utilisant l'API du site Danbooru et la possibilité de \"s'abonner\" à un personnage pour être notifié lorsqu'une image de ce dernier apparaît. Je travaille toujours dessus et prévois toujours des choses à rajouter.",
      "link": "https://github.com/Hanasagi/PixivImageOverlay",
      "langage":"Vue"
    },
    {
      "name":"Calculatrice",
      "desc":"Challenge du site Frontend Mentor https://www.frontendmentor.io/challenges/calculator-app-9lteq5N29",
      "link":"https://calculator-hanasagi.netlify.app",
      "langage":"Vue, Sass"
    },
    {
      "name":"Compte à rebours",
      "desc":"Challenge du site Frontend Mentor https://www.frontendmentor.io/challenges/launch-countdown-timer-N0XkGfyz-",
      "link":"https://countdown-hanasagi.netlify.app",
      "langage":"Vue, Sass"
    }
  ]
}